{"version":3,"file":"405.bundle.js","mappings":"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","sources":["../.././crate/pkg/index_bg.js"],"sourcesContent":["import * as wasm from './index_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Int32Array} nodes_data\n* @param {Int32Array} update_indices\n* @returns {Array<any>}\n*/\nexport function compute_logic(nodes_data, update_indices) {\n    var ptr0 = passArray32ToWasm0(nodes_data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray32ToWasm0(update_indices, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.compute_logic(ptr0, len0, ptr1, len1);\n    return takeObject(ret);\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_number_new(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_log_9a99fb1af846153b(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport function __wbg_log_76f7983b01e710a1(arg0, arg1) {\n    console.log(getObject(arg0), getObject(arg1));\n};\n\nexport function __wbg_new_515b65a8e7699d00() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_push_b7f68478f81d358b(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nexport function __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","cachegetUint32Memory0","WASM_VECTOR_LEN","passArray32ToWasm0","arg","malloc","Uint32Array","set","compute_logic","nodes_data","update_indices","ptr0","len0","ptr1","len1","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","__wbindgen_string_new","arg0","arg1","__wbindgen_number_new","__wbindgen_object_drop_ref","__wbg_log_9a99fb1af846153b","console","log","__wbg_log_76f7983b01e710a1","__wbg_new_515b65a8e7699d00","__wbg_push_b7f68478f81d358b","__wbg_new_693216e109162396","Error","__wbg_stack_0ddaca5d1abfb52f","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","__wbg_error_09919627ac0992f5","error","__wbindgen_throw"],"sourceRoot":""}